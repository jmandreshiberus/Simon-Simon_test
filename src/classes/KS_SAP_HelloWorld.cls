//Generated by FuseIT WSDL2Apex (http://www.fuseit.com/Solutions/SFDC-Explorer/Help-WSDL-Parser.aspx)
//Methods Included: SI_SFDC_HelloWorldSimon_Out
// Primary Port Class Name: HTTP_Port   
public class KS_SAP_HelloWorld {
    public class DT_HelloWorldSimonRequest {
        public String message;
        private String[] message_type_info = new String[]{'message','http://simon-sa.es/sfdc/helloworldsimon','string','1','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://simon-sa.es/sfdc/helloworldsimon','true','false'};
        private String[] field_order_type_info = new String[]{'message'};
        public DT_HelloWorldSimonRequest(){
        }
        public DT_HelloWorldSimonRequest(String message){
            this.message = message;
        }
        public void populateXmlNode(Dom.XmlNode outerNode){
            
            //System.assertEquals('SI_SFDC_HelloWorldSimon_Out', outerNode.getName());
            Dom.XmlNode messageNode = outerNode.addChildElement('message', '', '');
            if(this.message != null){
                messageNode.addTextNode(this.message);
            }
        }
    }
    public class DT_HelloWorldSimonResponse {
        public String result;
        private String[] result_type_info = new String[]{'result','http://simon-sa.es/sfdc/helloworldsimon','string','1','1','false'};
        private String[] apex_schema_type_info = new String[]{'http://simon-sa.es/sfdc/helloworldsimon','true','false'};
        private String[] field_order_type_info = new String[]{'result'};
        public DT_HelloWorldSimonResponse(){
        }
        public DT_HelloWorldSimonResponse(DOM.XmlNode responseNode){
            Set<DOM.XmlNode> nodesParsed = new Set<DOM.XmlNode>();
            //System.assertEquals('SI_SFDC_HelloWorldSimon_OutResponse', responseNode.getName());
            DOM.XmlNode resultNode = responseNode.getChildElement('result', 'http://simon-sa.es/sfdc/helloworldsimon');
            this.result = (resultNode == null) ? null : resultNode.getText();
            nodesParsed.add(resultNode);
            //System.debug(this.result);            
        }
    }
    public class HTTP_Port {
        public String endpoint_x = 'http://195.76.96.50:50000/XISOAPAdapter/MessageServlet?senderParty=&senderService=BcoSFDC&receiverParty=&receiverService=&interface=SI_SFDC_HelloWorldSimon_Out&interfaceNamespace=http://simon-sa.es/sfdc/helloworldsimon';
        //public String endpoint_x = 'http://requestb.in/1lzywyw1';
        
        public Map<String,String> inputHttpHeaders_x;
        public Map<String,String> outputHttpHeaders_x;
        public String clientCertName_x;
        public String clientCert_x;
        public String clientCertPasswd_x;
        public Integer timeout_x;
        private String[] ns_map_type_info = new String[]{'http://simon-sa.es/sfdc/helloworldsimon','KS_SAP_HelloWorld'};

        public String SI_SFDC_HelloWorldSimon_Out(String message) {
            KS_SAP_HelloWorld.DT_HelloWorldSimonRequest request_x = new KS_SAP_HelloWorld.DT_HelloWorldSimonRequest();
            KS_SAP_HelloWorld.DT_HelloWorldSimonResponse response_x;
            request_x.message = message;
            Map<String, KS_SAP_HelloWorld.DT_HelloWorldSimonResponse> response_map_x = new Map<String, KS_SAP_HelloWorld.DT_HelloWorldSimonResponse>();
            response_map_x.put('response_x', response_x);
            WebServiceCallout.invoke(
                this,
                request_x,
                response_map_x,
                new String[]{endpoint_x,
                'http://sap.com/xi/WebService/soap1.1',
                'http://simon-sa.es/sfdc/helloworldsimon',
                'MT_HelloWorldSimonRequest',
                'http://simon-sa.es/sfdc/helloworldsimon',
                'MT_HelloWorldSimonResponse',
                'KS_SAP_HelloWorld.DT_HelloWorldSimonResponse'}
            );
            response_x = response_map_x.get('response_x');
            return response_x.result;
        }
        
        private DOM.XmlNode populateDoc(DOM.Document doc){
            String env = 'http://schemas.xmlsoap.org/soap/envelope/';
            String xsi = 'http://www.w3.org/2001/XMLSchema-instance';
            String xsd = 'http://www.w3.org/2001/XMLSchema';
            String hel = 'http://simon-sa.es/sfdc/helloworldsimon';
            
            DOM.XmlNode envelope = doc.createRootElement('Envelope', env, 'soapenv');
            //envelope.setNamespace('xsd', xsd);
            //envelope.setNamespace('xsi', xsi);
            envelope.setNamespace('hel', hel);
            DOM.XmlNode header = envelope.addChildElement('soapenv:Header', '', '');
            AddHeader(header);
            //System.debug(doc.toXmlString());
            DOM.XmlNode body = envelope.addChildElement('soapenv:Body', '', '');
            return body;
        }

        private void AddHeader(DOM.XmlNode header){
        }

        public String SI_SFDC_HelloWorldSimon_Out_Http(String message) {
            DOM.Document doc = new DOM.Document();
            DOM.XmlNode body = populateDoc(doc);
            DOM.XmlNode methodNode = body.addChildElement('hel:MT_HelloWorldSimonRequest', '', '');            
            KS_SAP_HelloWorld.DT_HelloWorldSimonRequest request_x = new KS_SAP_HelloWorld.DT_HelloWorldSimonRequest(message);
            request_x.populateXmlNode(methodNode);
            
            HttpRequest req = new HttpRequest();
            req.setEndpoint(endpoint_x);
            req.setMethod('POST');
            
            //ESQU: INCLUIR LA SEGURIDAD EN LA LLAMADA y aumentar timeout
            //req.setTimeout(120000);
            
            string username = 'Salesforce';
            string password = 'Concierto0';
        
            Blob headerValue = Blob.valueOf(username + ':' + password);
            String authorizationHeader = 'Basic ' + EncodingUtil.base64Encode(headerValue);
            req.setHeader('Content-Type', 'text/xml; charset=utf-8');
            req.setHeader('Authorization', authorizationHeader);
            //ESQU END
            
            req.setHeader('Content-Type', 'text/xml; charset=UTF-8');
            req.setHeader('SOAPAction', 'http://sap.com/xi/WebService/soap1.1');
System.debug('ESQU doc: ' + doc);
            req.setBodyDocument(doc);
System.debug('ESQU: req.getBody' + req.getBody());
            Http http = new Http();
            HTTPResponse res = http.send(req);
System.debug('ESQU: res.getBody' + res.getBody());
            Dom.Document responseDoc = res.getBodyDocument();
            Dom.XmlNode rootNode = responseDoc.getRootElement();
            Dom.XmlNode bodyNode = rootNode.getChildElement('Body','http://schemas.xmlsoap.org/soap/envelope/');
            Dom.XmlNode MT_HelloWorldSimonResponseNode = bodyNode.getChildElement('MT_HelloWorldSimonResponse', 'http://simon-sa.es/sfdc/helloworldsimon');
                        
            KS_SAP_HelloWorld.DT_HelloWorldSimonResponse response_x = new KS_SAP_HelloWorld.DT_HelloWorldSimonResponse(MT_HelloWorldSimonResponseNode);
            return response_x.result;
        }
    }
}